[{"F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\index.js":"1","F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\Game.js":"2","F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\Board.js":"3","F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\Square.js":"4"},{"size":148,"mtime":1607181942827,"results":"5","hashOfConfig":"6"},{"size":208,"mtime":1607181340324,"results":"7","hashOfConfig":"6"},{"size":2430,"mtime":1607355151758,"results":"8","hashOfConfig":"6"},{"size":211,"mtime":1628217698664,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1r9n9mx",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\index.js",[],["20","21"],"F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\Game.js",[],"F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\Board.js",["22"],"import React , {Component} from 'react'\r\nimport Square from './Square'\r\n\r\nconst calculateWinner = squares =>{\r\n    const lines =[\r\n     [0,1,2],\r\n     [3,4,5],\r\n     [6,7,8],\r\n\r\n     [0,3,6],\r\n     [1,4,7],\r\n     [2,5,8],\r\n\r\n     [0,4,8],\r\n     [2,4,6]\r\n    ]\r\n    for(let i=0;i<lines.length;i++){\r\n        const[a,b,c] = lines[i]\r\n\r\n        if(\r\n            squares[a] &&\r\n            squares[a] === squares[b] &&\r\n            squares[a] === squares[c]\r\n        ){\r\n            return squares[a]\r\n        }\r\n\r\n   \r\n    }\r\n    return ''\r\n}\r\n\r\nclass Board extends Component{\r\n\r\n    state={\r\n        squares: ['','','','','','','','',''],\r\n        xIsnext: true\r\n    }\r\n    handleClick= number =>()=>{\r\n        if(calculateWinner(this.state.squares) || this.state.squares[number]){\r\n            return\r\n        }\r\n    const newSquares=[...this.state.squares]\r\n    newSquares[number]= this.state.xIsnext ? 'x' : 'o'\r\n    this.setState({\r\n        squares:newSquares,\r\n        xIsnext:!this.state.xIsnext\r\n    })\r\n    \r\n    }\r\n    handleReset=()=>{\r\n        this.setState({\r\n        squares: ['','','','','','','','',''],\r\n        xIsnext: true\r\n        })\r\n    }\r\n    render(){\r\n        const {squares,xIsnext}=this.state\r\n\r\n        const winner = calculateWinner(this.state.squares)\r\n        let status\r\n\r\n        if(winner){\r\n            status = `Winner : ${winner}`\r\n        }\r\n        return(\r\n            <div className='Board'>\r\n                <h1>{status}</h1>\r\n            <div className=\"Row\">\r\n            <Square value={squares[0]} onClick={this.handleClick(0)}/>\r\n            <Square value={squares[1]} onClick={this.handleClick(1)}/>\r\n            <Square value={squares[2]} onClick={this.handleClick(2)}/>\r\n            </div>\r\n            <div className=\"Row\">\r\n            <Square value={squares[3]} onClick={this.handleClick(3)}/>\r\n            <Square value={squares[4]} onClick={this.handleClick(4)}/>\r\n            <Square value={squares[5]} onClick={this.handleClick(5)}/>\r\n            </div>\r\n            <div className=\"Row\">\r\n            <Square value={squares[6]} onClick={this.handleClick(6)}/>\r\n            <Square value={squares[7]} onClick={this.handleClick(7)}/>\r\n            <Square value={squares[8]} onClick={this.handleClick(8)}/>\r\n            </div>\r\n            <button onClick={this.handleReset} className='Reset'>Reset</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Board\r\n","F:\\React\\React projects\\React_practice_works\\tic-tac-toe\\src\\Square.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":58,"column":24,"nodeType":"29","messageId":"30","endLine":58,"endColumn":31},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'xIsnext' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]